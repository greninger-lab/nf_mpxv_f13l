/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

if (!params.skip_fastqc) {
    process {
        withName: 'FASTQ_TRIM_FASTP_FASTQC:FASTQC_RAW' {
            ext.args = '--quiet'
            publishDir = [
                path: { "${params.output}/fastqc/raw" },
                mode: 'copy',
				pattern:"*.{html,zip}"
            ]
        }
    }
}

if (!params.skip_fastp) {
    process {
        withName: 'FASTQ_TRIM_FASTP_FASTQC:FASTP' {
            ext.args = { "--cut_front --cut_tail --trim_poly_x --cut_mean_quality 20 --qualified_quality_phred 20 --unqualified_percent_limit 20 --length_required ${params.trim_len}" }
            publishDir = [
                [
                    path: { "${params.output}/fastp/log" },
                    mode: 'copy',
                    pattern: "*.{json,html,log}"
                ],
               	[
                    path: { "${params.output}/fastp/fastq_trimmed" },
                    mode: 'copy',
                    pattern: "*.fastp.fastq.gz",
                    enabled: params.save_trimmed_reads
                ],
                [
                    path: { "${params.output}/fastp/trimmed_fail" },
                    mode: 'copy',
                    pattern: "*.fail.fastq.gz",
                    enabled: params.save_trimmed_fail
                ]
            ]
        }
    }

    if (!params.skip_fastqc) {
		process {
			withName: 'FASTQ_TRIM_FASTP_FASTQC:FASTQC_TRIM' {
				ext.args = '--quiet'
				publishDir = [
					path: { "${params.output}/fastqc/trim" },
					mode: 'copy',
					pattern:"*.{html,zip}"
				]
			}
		}
    }
}

if (params.sample) {
    process {
        withName: SEQTK_SAMPLE {
            publishDir = [
                path: { "${params.output}/seqtk_sample" },
                mode: 'copy',
				pattern:"*.fastq.gz",
				enabled: params.save_sample_reads
            ]
        }
    }
}

// Reference alignment
process {
    withName: 'BBMAP_ALIGN_REF' {
		ext.args = 'local=true ambiguous=random'
		ext.prefix = { "${meta.id}_ref" }
        publishDir = [ 
			path: { "${params.output}/bbmap_align/ref" },
			mode: 'copy',
			pattern: "*.{bam,bai}"
		]
    }

	withName: IVAR_TRIM {
		ext.args = [
			'-m 30 -q 20',
			params.ivar_trim_noprimer ? '' : '-e',
			params.ivar_trim_offset   ? "-x ${params.ivar_trim_offset}" : ''
			].join(' ').trim()
		ext.prefix = { "${meta.id}.ivar_trim" }
		publishDir = [
			path: { "${params.output}/ivar_trim/log" },
			mode: 'copy',
			pattern: '*.log'
		]
	}

    withName: 'SAMTOOLS_SORT' {
		ext.prefix = { "${meta.id}.ivar_trim.sorted" }
        publishDir = [ 
			path: { "${params.output}/ivar_trim" },
			mode: 'copy',
			pattern: "*.{bam}"
		]
    }

	withName: 'SAMTOOLS_INDEX' {
        publishDir = [ 
			path: { "${params.output}/ivar_trim" },
			mode: 'copy',
			pattern: "*.{bai}"
		]
    }
}

// F13L variants calling
process {
    withName: 'F13L_VARIANTS' {
		ext.args = { "-t ${params.ivar_variants_t} -q ${params.ivar_variants_q} -m ${params.ivar_variants_m}" }
		ext.args2 = '--ignore-overlaps --count-orphans --no-BAQ --max-depth 0 --min-BQ 20'
        publishDir = [ 
			[
				path: { "${params.output}/F13L_variants" },
				mode: 'copy',
				pattern: "*.tsv"
			],
			[
				path: { "${params.output}/F13L_variants/mpileup" },
				mode: 'copy',
				pattern: "*.mpileup",
				enabled: params.save_mpileup
			]
		]
    }
 }

// Consensus assembly
process {
	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_1:IVAR_CONSENSUS' {
		ext.args = { "-t ${params.ivar_consensus_t} -q ${params.ivar_consensus_q} -m 1 -n N" }
		ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 20 -aa'
		ext.prefix = { "${meta.id}_consensus1" }
		publishDir = [ 
			path: { "${params.output}/ivar_consensus/intermediate_consensus" },
			mode: 'copy',
			pattern: "*.fa",
			enabled: params.save_intermediate_consensus
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_1:BBMAP_ALIGN_CONSENSUS' {
		ext.args = 'local=true ambiguous=random'	
		ext.prefix = { "${meta.id}_consensus1" }
		publishDir = [
			path: { "${params.output}/bbmap_align/intermediate_bam" },
			mode: 'copy',
			pattern: "*.{bam,bai}",
			enabled: params.save_intermediate_consensus
		]
	}
	
	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_2:IVAR_CONSENSUS' {
		ext.args = { "-t ${params.ivar_consensus_t} -q ${params.ivar_consensus_q} -m 1 -n N" }
		ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 20 -aa'
		ext.prefix = { "${meta.id}_consensus2" }
		publishDir = [ 
			path: { "${params.output}/ivar_consensus/intermediate_consensus" },
			mode: 'copy',
			pattern: "*.fa",
			enabled: params.save_intermediate_consensus
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_2:BBMAP_ALIGN_CONSENSUS' {
		ext.args = 'local=true ambiguous=random'	
		ext.prefix = { "${meta.id}_consensus2" }
		publishDir = [
			path: { "${params.output}/bbmap_align/intermediate_bam" },
			mode: 'copy',
			pattern: "*.{bam,bai}",
			enabled: params.save_intermediate_consensus
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_FINAL:IVAR_CONSENSUS' {
		ext.args = { "-t ${params.ivar_consensus_t} -q ${params.ivar_consensus_q} -m ${params.ivar_consensus_m} -n N" }
		ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 20 -aa'
		ext.prefix = { "${meta.id}_consensus_final" }
		publishDir = [ 
			path: { "${params.output}/ivar_consensus" },
			mode: 'copy',
			pattern: "*.fa"
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_FINAL:BBMAP_ALIGN_CONSENSUS' {
		ext.args = 'local=true ambiguous=random'	
		ext.prefix = { "${meta.id}_consensus_final" }
		publishDir = [
			path: { "${params.output}/bbmap_align/consensus" },
			mode: 'copy',
			pattern: "*.{bam,bai}"
		]
	}
}

process {
	withName: SUMMARY_CLEANUP {
		publishDir = [
			path: { "${params.output}" },
			mode: 'copy',
			pattern: "run_summary.tsv"
		]
	}
}
